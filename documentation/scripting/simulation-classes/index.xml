<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Simulation classes on BornAgain</title>
    <link>https://www.bornagainproject.org/documentation/scripting/simulation-classes/</link>
    <description>Recent content in Simulation classes on BornAgain</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://www.bornagainproject.org/documentation/scripting/simulation-classes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GISAS</title>
      <link>https://www.bornagainproject.org/documentation/scripting/simulation-classes/gisas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.bornagainproject.org/documentation/scripting/simulation-classes/gisas/</guid>
      <description>GISAS simulation tutorial A GISAS simulation using BornAgain consists of the following steps:
 specify materials and structures that make up the scattering target (&amp;ldquo;sample&amp;rdquo;), specify input beam and detector, run the simulation, visualize or/and save the simulated detector image.    
  In this example, we simulate the scattering from a mixture of cylinder and prism nanoparticles that are placed at random on top of a substrate.</description>
    </item>
    
    <item>
      <title>Off-specular scattering</title>
      <link>https://www.bornagainproject.org/documentation/scripting/simulation-classes/off-specular/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.bornagainproject.org/documentation/scripting/simulation-classes/off-specular/</guid>
      <description>Off-specular scattering An off-specular simulation is created by the command
ba.offSpecularSimulation() Usage is illustrated by the example Off-Specular in the examples section.</description>
    </item>
    
    <item>
      <title>Reflectometry</title>
      <link>https://www.bornagainproject.org/documentation/scripting/simulation-classes/reflectometry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.bornagainproject.org/documentation/scripting/simulation-classes/reflectometry/</guid>
      <description>Specular simulation tutorial In this example, we will simulate specular signal from a sample with 10 double layers of Ti-Ni on silicon substrate in vacuum environment.
Importing the Python modules We start by importing the BornAgain Python API and alias it as ba. Then we import some often used unit designations from BornAgain.
import bornagain as ba from bornagain import deg, angstrom Sample definition Our sample will consist of (in the order from top to bottom):</description>
    </item>
    
    <item>
      <title>Depth-probe</title>
      <link>https://www.bornagainproject.org/documentation/scripting/simulation-classes/depth-probe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.bornagainproject.org/documentation/scripting/simulation-classes/depth-probe/</guid>
      <description>Depth-probe simulation tutorial Depth-probe simulation is an auxiliary simulation type, which helps to visualize the total intensity in dependence on the beam incidence angle and the position in the sample.
Here we will consider the intensity map produced by a neutron resonator, composed of one Ti/Pt bilayer.
Used conventions Depth-probe simulation takes into account the position across the surface of the sample. This position will be denoted as &amp;lsquo;&amp;lsquo;z&amp;rsquo;&amp;rsquo; and measured in nanometers.</description>
    </item>
    
  </channel>
</rss>